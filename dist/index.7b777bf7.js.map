{"mappings":"gBAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAAAA,+7BA+CAC,EAAU,GACVC,EAAI,EACJC,EAAO,KACTC,YAAW,KACS,OAAdJ,EAAOE,GACPD,GAAW,OACS,MAAdD,EAAOE,GACbD,GAAW,SAEXA,GAAWD,EAAOE,GAEtBN,EAAKS,UAAYJ,EACjBF,EAAMM,UAAYL,EAAOM,UAAU,EAAGJ,GACtCK,OAAOC,SAAS,EAAE,OAClBZ,EAAKY,SAAS,EAAE,OACZN,EAAIF,EAAOS,OAAS,IACtBP,GAAK,EACLC,OAED,KAGLA","sources":["./src/main.js"],"sourcesContent":["let html = document.querySelector(\"#html\"); //在HTML创建一个demo元素，通过css找到这个元素，querySelector（通过css找到某个元素）\r\nlet style = document.querySelector(\"#style\");\r\nlet string = `\r\n/*你好，我是一名前端新人\r\n*接下来我演示一下我的前端功底\r\n*首先我要准备一个div\r\n**/\r\n#div1{\r\n    border: 1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来我把div变成一个太极\r\n*注意看好了\r\n*首先把div变成一个圆\r\n**/\r\n#div1{\r\n    box-shadow:0 0 3px rgba(0,0,0,0.5);\r\n    border-radius: 50%;\r\n    border: none;\r\n}\r\n/* 太极一黑一白\r\n**/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 50%);\r\n}\r\n/* 加两个神秘的小球*/\r\n#div1::before{\r\n    width: 100px;\r\n    height:100px;\r\n    left:50%;\r\n    transform: translateX(-50%);\r\n    background:#000;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform: translateX(-50%);\r\n    background:#fff;\r\n    border-radius:50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 25%);\r\n}\r\n\r\n`;\r\n//加注释/*是为了让css在html里生效\r\nlet string2 = \"\";\r\nlet n = 0;\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    if (string[n] === \"\\n\"){\r\n        string2 += \"<br>\";//当第n个为回车时打印出<br>\r\n    }else if (string[n] === \" \"){\r\n        string2 += \"&nbsp;\";//当第n个为空格时打印出&nbsp;\r\n    } else {\r\n        string2 += string[n];// 继续打印string内容\r\n    }\r\n    html.innerHTML = string2;\r\n    style.innerHTML = string.substring(0, n);//substring() 方法返回一个字符串在开始索引到结束索引之间的一个子集, 或从开始索引直到字符串的末尾的一个子集。\r\n    window.scrollTo(0,99999);\r\n    html.scrollTo(0,99999);\r\n    if (n < string.length - 1) {\r\n      n += 1;\r\n      step();\r\n    }\r\n  }, 50);\r\n};\r\n\r\nstep();\r\n"],"names":["$16b5ad875ae907e2f7f79e7b8fe116cc$var$html","document","querySelector","$16b5ad875ae907e2f7f79e7b8fe116cc$var$style","$16b5ad875ae907e2f7f79e7b8fe116cc$var$string","$16b5ad875ae907e2f7f79e7b8fe116cc$var$string2","$16b5ad875ae907e2f7f79e7b8fe116cc$var$n","$16b5ad875ae907e2f7f79e7b8fe116cc$var$step","setTimeout","innerHTML","substring","window","scrollTo","length"],"version":3,"file":"index.7b777bf7.js.map"}